#include<bits/stdc++.h>
using namespace std;


#define countbit(x) __builtin_popcount(x)
#define ll long long

void input(vector<int>& arr1, vector<int>& arr2, int m, int n)
{
    for(int i = 0; i < m; ++i)
    {
        int x;
        cin>>x;
        arr1.push_back(x);
    }
    for(int i = 0; i < n; ++i)
    {
        int x;
        cin>>x;
        arr2.push_back(x);
    }
}

void print(vector<int>& arr1, vector<int>& arr2, int m, int n)
{
    for(int i = 0; i < m; ++i)
    {
        cout<<arr1[i]<<" ";
    }
    cout<<endl;
    for(int i = 0; i < n; ++i)
    {
        cout<<arr2[i]<<" ";
    }
}

//Used Insertion Sort in arr2
//Time complexity O(m*n)
void merge_unoptimized(vector<int>& arr1, vector<int>& arr2, int m, int n)
{
    for(int i = 0; i < m; ++i)
    {
        if(arr2[0] < arr1[i])
        {
            swap(arr1[i], arr2[0]);
            int j = 0;
            while((j < n - 1) && (arr2[j] > arr2[j + 1]))
            {
                swap(arr2[j], arr2[j + 1]);
                ++j;
            }
        }
    }
}


int main()
{
    int t = 1;
    // cin>>t;
    while(t--)
    {
        int m, n;
        cin>>m>>n;
        vector<int> arr1, arr2;
        input(arr1, arr2, m, n);
        merge_unoptimized(arr1, arr2, m, n);
        print(arr1, arr2, m, n);
    }
    return 0;
}
